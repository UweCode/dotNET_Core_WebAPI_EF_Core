// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Udemy_NetCore.Data;

namespace Udemy_NetCore.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210106010202_FinalSeeding")]
    partial class FinalSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Udemy_NetCore.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fights")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 15,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 2,
                            Defeats = 0,
                            Defense = 5,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 20,
                            Name = "Raistlin",
                            Strength = 5,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("Udemy_NetCore.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        });
                });

            modelBuilder.Entity("Udemy_NetCore.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("Udemy_NetCore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 97, 203, 207, 109, 201, 246, 48, 199, 78, 18, 229, 196, 179, 41, 23, 107, 47, 77, 205, 152, 210, 135, 40, 0, 10, 116, 48, 83, 84, 241, 135, 52, 35, 74, 4, 203, 143, 116, 45, 209, 142, 145, 201, 34, 3, 170, 130, 80, 221, 0, 174, 3, 223, 45, 18, 44, 190, 239, 171, 174, 59, 244, 92, 222 },
                            PasswordSalt = new byte[] { 209, 112, 155, 188, 112, 219, 39, 242, 124, 159, 32, 31, 20, 210, 8, 89, 69, 158, 76, 120, 40, 15, 23, 188, 173, 73, 43, 97, 37, 130, 155, 152, 32, 225, 114, 67, 45, 31, 165, 0, 237, 188, 75, 69, 155, 26, 49, 86, 72, 190, 56, 4, 71, 141, 145, 168, 202, 230, 182, 178, 98, 20, 1, 88, 93, 255, 51, 129, 244, 135, 239, 154, 103, 131, 181, 155, 34, 228, 34, 99, 92, 211, 126, 50, 107, 168, 194, 209, 97, 125, 37, 29, 65, 172, 131, 208, 11, 139, 17, 102, 163, 44, 217, 228, 97, 35, 233, 134, 82, 232, 94, 160, 201, 114, 244, 212, 204, 74, 4, 114, 48, 250, 70, 250, 201, 174, 157, 229 },
                            Username = "User1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 97, 203, 207, 109, 201, 246, 48, 199, 78, 18, 229, 196, 179, 41, 23, 107, 47, 77, 205, 152, 210, 135, 40, 0, 10, 116, 48, 83, 84, 241, 135, 52, 35, 74, 4, 203, 143, 116, 45, 209, 142, 145, 201, 34, 3, 170, 130, 80, 221, 0, 174, 3, 223, 45, 18, 44, 190, 239, 171, 174, 59, 244, 92, 222 },
                            PasswordSalt = new byte[] { 209, 112, 155, 188, 112, 219, 39, 242, 124, 159, 32, 31, 20, 210, 8, 89, 69, 158, 76, 120, 40, 15, 23, 188, 173, 73, 43, 97, 37, 130, 155, 152, 32, 225, 114, 67, 45, 31, 165, 0, 237, 188, 75, 69, 155, 26, 49, 86, 72, 190, 56, 4, 71, 141, 145, 168, 202, 230, 182, 178, 98, 20, 1, 88, 93, 255, 51, 129, 244, 135, 239, 154, 103, 131, 181, 155, 34, 228, 34, 99, 92, 211, 126, 50, 107, 168, 194, 209, 97, 125, 37, 29, 65, 172, 131, 208, 11, 139, 17, 102, 163, 44, 217, 228, 97, 35, 233, 134, 82, 232, 94, 160, 201, 114, 244, 212, 204, 74, 4, 114, 48, 250, 70, 250, 201, 174, 157, 229 },
                            Username = "User2"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = new byte[] { 97, 203, 207, 109, 201, 246, 48, 199, 78, 18, 229, 196, 179, 41, 23, 107, 47, 77, 205, 152, 210, 135, 40, 0, 10, 116, 48, 83, 84, 241, 135, 52, 35, 74, 4, 203, 143, 116, 45, 209, 142, 145, 201, 34, 3, 170, 130, 80, 221, 0, 174, 3, 223, 45, 18, 44, 190, 239, 171, 174, 59, 244, 92, 222 },
                            PasswordSalt = new byte[] { 209, 112, 155, 188, 112, 219, 39, 242, 124, 159, 32, 31, 20, 210, 8, 89, 69, 158, 76, 120, 40, 15, 23, 188, 173, 73, 43, 97, 37, 130, 155, 152, 32, 225, 114, 67, 45, 31, 165, 0, 237, 188, 75, 69, 155, 26, 49, 86, 72, 190, 56, 4, 71, 141, 145, 168, 202, 230, 182, 178, 98, 20, 1, 88, 93, 255, 51, 129, 244, 135, 239, 154, 103, 131, 181, 155, 34, 228, 34, 99, 92, 211, 126, 50, 107, 168, 194, 209, 97, 125, 37, 29, 65, 172, 131, 208, 11, 139, 17, 102, 163, 44, 217, 228, 97, 35, 233, 134, 82, 232, 94, 160, 201, 114, 244, 212, 204, 74, 4, 114, 48, 250, 70, 250, 201, 174, 157, 229 },
                            Username = "User3"
                        });
                });

            modelBuilder.Entity("Udemy_NetCore.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 5,
                            Name = "Crystal Wand"
                        });
                });

            modelBuilder.Entity("Udemy_NetCore.Models.Character", b =>
                {
                    b.HasOne("Udemy_NetCore.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Udemy_NetCore.Models.CharacterSkill", b =>
                {
                    b.HasOne("Udemy_NetCore.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Udemy_NetCore.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("Udemy_NetCore.Models.Weapon", b =>
                {
                    b.HasOne("Udemy_NetCore.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("Udemy_NetCore.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Udemy_NetCore.Models.Character", b =>
                {
                    b.Navigation("CharacterSkills");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("Udemy_NetCore.Models.Skill", b =>
                {
                    b.Navigation("CharacterSkills");
                });

            modelBuilder.Entity("Udemy_NetCore.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
